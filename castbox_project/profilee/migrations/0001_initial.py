# Generated by Django 4.2 on 2024-05-04 00:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("comment", "0001_initial"),
        ("episode", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("mention", "0001_initial"),
        ("follow", "0001_initial"),
        ("channel", "0001_initial"),
        ("playlist", "0001_initial"),
        ("like", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=False, verbose_name="Is Active"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "channel",
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        related_name="profiles",
                        to="channel.channel",
                        verbose_name="Channels",
                    ),
                ),
                (
                    "comment",
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        related_name="profiles",
                        to="comment.comment",
                        verbose_name="Comments",
                    ),
                ),
                (
                    "episode",
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        related_name="profiles",
                        to="episode.episode",
                        verbose_name="Episodes",
                    ),
                ),
                (
                    "follow",
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        related_name="profiles",
                        to="follow.follow",
                        verbose_name="Follows",
                    ),
                ),
                (
                    "like",
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        related_name="profiles",
                        to="like.like",
                        verbose_name="Likes",
                    ),
                ),
                (
                    "mention",
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        related_name="profiles",
                        to="mention.mention",
                        verbose_name="Mentions",
                    ),
                ),
                (
                    "owner",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Owner",
                    ),
                ),
                (
                    "playlist",
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        related_name="profiles",
                        to="playlist.playlist",
                        verbose_name="Playlists",
                    ),
                ),
            ],
            options={
                "verbose_name": "Profile",
                "verbose_name_plural": "Profiles",
                "ordering": ("id",),
            },
        ),
    ]
